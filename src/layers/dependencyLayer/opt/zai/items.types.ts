export const ItemStatuses: Record<number, string> = {
  22000: 'PENDING', //Transaction has not started yet, no payment received or requested
  22100: 'PAYMENT_REQUIRED', //Payment has been requested by the seller to the buyer
  22110: 'WIRE_PENDING', //The buyer has acknowledged that they are wiring the funds in, they are on their way.
  22150: 'PAYMENT_PENDING', //Direct debit payment has been triggered, awaiting for these funds to clear.
  22175: 'PAYMENT_HELD',
  22180: 'PAYMENT_AUTHORIZED',
  22185: 'VOID_PENDING',
  22195: 'VOIDED',
  22200: 'PAYMENT_DEPOSITED',
  22300: 'WORK_COMPLETED',
  22400: 'PROBLEM_FLAGGED',
  22410: 'PROBLEM_RESOLVE_REQUESTED',
  22420: 'PROBLEM_ESCALATED',
  22500: 'COMPLETED',
  22575: 'CANCELLED',
  22600: 'REFUNDED',
  22610: 'REFUND_PENDING',
  22650: 'REFUND_FLAGGED',
  22670: 'OFF_PLATFORM_REFUNDED',
  22700: 'PARTIAL_COMPLETED',
  22800: 'PARTIAL_PAID',
  22680: 'OFF_PLATFORM_CHARGEDBACK',
};

interface ZaiItem {
  id: string;
  name: string;
  description: string;
  created_at: string; // was Date
  updated_at: string; // was Date
  state: string;
  status: number;
  amount: number;
  payment_type_id: number;
  currency: string;
  buyer_name: string;
  buyer_email: string;
  buyer_country: string;
  seller_name: string;
  seller_email: string;
  seller_country: string;
  tds_check_state: string;
  batch_state: string;
  invoice_url: string;
  payout_descriptor: string;
  remaining_amount: number;
  requested_release_amount: number;
  custom_descriptor: string;
  net_amount: number;
  chargedback_amount: number;
  refunded_amount: number;
  released_amount: number;
  buyer_fees: number;
  seller_fees: number;
  credit_card_fee: number;
  paypal_fee: number;
  seller_url: string;
  buyer_url: string;
  direct_debit_fee: number;
  due_date: Date | null;
  pending_release_amount: number;
  dynamic_descriptor: string;
  deposit_reference: string;
  promisepay_fee: number;
  total_outstanding: number;
  total_amount: number;
  payment_method: string;
  payment_credit_card_enabled: boolean;
  payment_direct_debit_enabled: boolean;
  related: ItemRelated;
  links: ItemLinks;
}

interface ItemRelated {
  buyers: string;
  sellers: string;
}

interface ItemLinks {
  self: string;
  buyers: string;
  sellers: string;
  status: string;
  fees: string;
  transactions: string;
  batch_transactions: string;
  wire_details: string;
  bpay_details: string;
  tds_checks: string;
}

export interface ZaiItemWebhookEvent {
  items: ZaiItem;
}

export interface GetZaiItemResponse {
  items: ZaiItem;
}

export interface CreateZaiItemRequest {
  id: string; // Unique ID that can be generated by the platform. Cannot contain '.' character.
  name: string; // A name for the item
  amount: number; // The cost in cents
  currency?: string; // ISO 4217 alpha-3 currency code. Optional field.
  payment_type: number; // Payment type: 2. Express
  buyer_id: string; // Marketplace / Platform buyer ID
  seller_id: string; // Marketplace / Platform Seller ID
  fee_ids?: string; // A comma separated list of fee IDs to apply. Optional field.
  description?: string; // A description of the item. Optional field.
  buyer_url?: string; // Link for the buyer CTA (Call To Action). Optional field.
  seller_url?: string; // Link for the seller CTA (Call To Action). Optional field.
  tax_invoice?: boolean; // Toggle to generate tax invoice once Item is complete. Optional field.
  custom_descriptor?: string; // Information to appear on credit card and direct debit statements when custom_descriptors are enabled. Optional field.
}

export interface CreateZaiItemResponse {
  items: ZaiItem;
}

export interface CreateZaiPaymentRequest {
  account_id: string; // Account id of the bank account/credit card, etc making payment (not user id)
  device_id?: string; // Device Information for the device initiating the payment. This will need to be provided for card payments.
  ip_address?: string; // IP Information for the device initiating the payment. This will need to be provided for card payments.
  cvv?: string; // CVV / CVC
  merchant_phone?: string; // Seller User Phone Number or Mobile number
}

export interface CreateZaiPaymentResponse {
  items: ZaiItem;
  related: ItemRelated;
  links: ItemLinks;
}

export interface UpdateZaiItemRequest {
  amount?: number; // The cost in cents
  name?: string; // A name for the item
  buyer_id?: string; // Marketplace / Platform buyer ID
  seller_id?: string; // Marketplace / Platform Seller ID
  description?: string; // A description of the item
  custom_descriptor?: string; // Information to appear on credit card and direct debit statements when custom_descriptors are enabled
}

export interface ZaiUpdateItemResponse {
  items: ZaiItem;
}
